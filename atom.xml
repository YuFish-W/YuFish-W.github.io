<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>酒书茶社</title>
  
  <subtitle>人是生而自由的，却无往不在枷锁之中。</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-03-14T08:36:28.490Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>YuFish-W</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>fasd</title>
    <link href="http://example.com/2022/03/14/fasd/"/>
    <id>http://example.com/2022/03/14/fasd/</id>
    <published>2022-03-14T08:36:28.000Z</published>
    <updated>2022-03-14T08:36:28.490Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>fs</title>
    <link href="http://example.com/2022/03/14/fs/"/>
    <id>http://example.com/2022/03/14/fs/</id>
    <published>2022-03-14T08:20:04.000Z</published>
    <updated>2022-03-14T08:20:04.148Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>jdbc</title>
    <link href="http://example.com/2022/03/13/apache-dbutils%E5%B0%81%E8%A3%85%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/03/13/apache-dbutils%E5%B0%81%E8%A3%85%E9%97%AE%E9%A2%98/</id>
    <published>2022-03-13T13:15:25.000Z</published>
    <updated>2022-03-14T07:13:21.812Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在IDEA中使用apache-dbutils查询返回对象时封装属性的问题"><a href="#在IDEA中使用apache-dbutils查询返回对象时封装属性的问题" class="headerlink" title="在IDEA中使用apache-dbutils查询返回对象时封装属性的问题"></a>在IDEA中使用apache-dbutils查询返回对象时封装属性的问题</h1><h2 id="此处是操作MySQL数据库"><a href="#此处是操作MySQL数据库" class="headerlink" title="此处是操作MySQL数据库"></a>此处是操作MySQL数据库</h2><ul><li><p><strong>在使用<code>apache-dbutils</code>的时候，查询过程中如果创建的javabean对象里的属性比查询到的字段多，则此时创建的对象属性值是<code>null</code>，引用类型的属性默认<code>null</code> 。</strong></p><ul><li><p><strong>创建测试表和测试类</strong>：</p><span id="more"></span></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#创建一个测试表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test0(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test0 <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test0 <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test0 <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="string">&#x27;c&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个多一个属性 pwd 的javabean类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test0</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">test0</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span><span class="params">(String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test0&#123;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">            <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">            <span class="string">&quot;, pwd=&#x27;&quot;</span> + pwd + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>测试方法</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span></span>&#123;</span><br><span class="line">    QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">    Connection connection= <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        connection = JDBCUtilsByDruid.getConnection();</span><br><span class="line">        <span class="comment">//这里是使用的一个自己创建的管理数据库连接关闭的工具类</span></span><br><span class="line">        </span><br><span class="line">        List&lt;test0&gt; query = qr.query(connection, <span class="string">&quot;select * from test0&quot;</span>, <span class="keyword">new</span> BeanListHandler&lt;test0&gt;(test0.class));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (test0 t : query)&#123;</span><br><span class="line">            System.out.println(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(throwables);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        JDBCUtilsByDruid.closeConnection(<span class="keyword">null</span>,<span class="keyword">null</span>,connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果如下</strong>：<img src="https://img-blog.csdnimg.cn/62ac59dfab8041979d1ca6fc37b56492.png"></p><p><strong>可以看到如果创建的<code>javabean</code>对象中比表中的字段多，并不会报错，此时值为<code>null</code>(因为在类中属性都有默认值，引用类型对应的是<code>null</code>)</strong></p></li></ul></li><li><p><strong>如果创建的javabean类里面的属性名和需要查询的表里的字段名不相同，则无法赋值成功，会是Null。因为底层是通过我们给出的Class对象通过反射找到和表中字段对应的属性，利用<code>setXX()</code>方法给它赋值，找不到这个对应的属性则无法复制，而属性是有默认值的，引用类型默认是Null</strong>。</p><ul><li><p>例如在创建表的时候将<code>name</code>换成<code>name0</code>:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test0(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">NAME0 <span class="type">VARCHAR</span>(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><p><strong>此时运行结果为</strong>：<img src="https://img-blog.csdnimg.cn/021c09be1a86429bb7428b6474f966a7.png"></p></li></ul></li><li><p><strong>如果在多表查询的时候有表中有相同名字的字段，此时应该在查询的时候使用<code>AS</code>给属性别名</strong>。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;在IDEA中使用apache-dbutils查询返回对象时封装属性的问题&quot;&gt;&lt;a href=&quot;#在IDEA中使用apache-dbutils查询返回对象时封装属性的问题&quot; class=&quot;headerlink&quot; title=&quot;在IDEA中使用apache-dbutils查询返回对象时封装属性的问题&quot;&gt;&lt;/a&gt;在IDEA中使用apache-dbutils查询返回对象时封装属性的问题&lt;/h1&gt;&lt;h2 id=&quot;此处是操作MySQL数据库&quot;&gt;&lt;a href=&quot;#此处是操作MySQL数据库&quot; class=&quot;headerlink&quot; title=&quot;此处是操作MySQL数据库&quot;&gt;&lt;/a&gt;此处是操作MySQL数据库&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;在使用&lt;code&gt;apache-dbutils&lt;/code&gt;的时候，查询过程中如果创建的javabean对象里的属性比查询到的字段多，则此时创建的对象属性值是&lt;code&gt;null&lt;/code&gt;，引用类型的属性默认&lt;code&gt;null&lt;/code&gt; 。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建测试表和测试类&lt;/strong&gt;：&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
